group 'de.kotlincook.textmining'
version '1.7-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.3.40'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.openjfx:javafx-plugin:0.0.7"
    }
}

apply plugin: 'org.openjfx.javafxplugin'
apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'signing'

repositories {
    mavenCentral()
    jcenter()
}


javafx {
    // will pull in transitive modules
    modules("javafx.controls", "javafx.fxml") // replace with what you modules need

    // another option is to use:
    // modules = listOf("javafx.controls", "javafx.fxml")

    version = "12.0.1" // or whatever version you're using
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'no.tornado:tornadofx:1.7.14'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    compile "org.codehaus.groovy:groovy-all:2.4.10"
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4"
}

jar {
    manifest {
        attributes 'Main-Class': 'de.kotlincook.textmining.streetdivider.StreetDividerGUIKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task('jaronly', type: Jar) {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}



task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}



signing {
    useGpgCmd()
    sign jar
    sign sourcesJar
    sign javadocJar
}

